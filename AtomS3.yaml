# substitutions:

esphome:
  name: atoms3
  friendly_name: AtomS3
  on_boot:
    priority: -100  # or 250~200, before MQTT
    then:
      - script.execute: check_feed

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino

logger:

<<: !include .wifi.yaml
<<: !include .api.yaml
<<: !include .ota.yaml

time:
  - platform: homeassistant
    id: ha_time

script:
  - id: check_feed  # 检查是否还有物料
    then:
      - switch.turn_on: infrared_led
      - delay: 150ms
      - if:
          condition:
            lambda: 'return id(phototransistor).state;'
          then:
            - binary_sensor.template.publish:
                id: missing_feed
                state: ON  # 缺料
          else:
            - binary_sensor.template.publish:
                id: missing_feed
                state: OFF
      - switch.turn_off: infrared_led
    mode: single

binary_sensor:
  - platform: status
    id: system_status
    name: "Status"

  - platform: gpio
    internal: true
    disabled_by_default: true
    entity_category: diagnostic
    name: "Button"
    icon: "mdi:gesture-tap-button"
    pin:
      number: GPIO41
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_off: 10ms
    on_press:  # 当按钮按下时
      then:
        # 手动喂食
        # - switch.toggle: ina_switch
        - script.execute: check_feed
        # - sensor.template.publish:
        #     id: last_feed_time
        #     state: !lambda 'return id(ha_time).now().timestamp;'

  - platform: gpio
    id: phototransistor  # 红外接收
    pin: GPIO8

  # - platform: gpio
  #   id: pallet  # 一个微动开关，表示托盘状态，也可以代表正在喂食。
  #   name: "Feeding" # 正在喂食
  #   pin:
  #     number: GPIO6
  #     inverted: true
  #   filters:
  #     - delayed_off: 10ms
  #   entity_category: diagnostic
  #   on_press: # 当托盘推出时
  #     then:
  #       # 记录喂食时间
  #       - sensor.template.publish:
  #           id: last_feed_time
  #           state: !lambda 'return id(ha_time).now().timestamp;'
  #   on_release: # 当托盘收回时
  #     then:
  #       # 关闭电机
  #       - switch.turn_off: ina_switch
  #       # 然后打开红外发射，检测是否有物料
  #       - script.execute: check_feed

  - platform: template
    id: missing_feed
    name: "Missing Feed" # 缺料
    icon: "mdi:food"
    device_class: problem

i2c:
  scl: GPIO39
  sda: GPIO38

sensor:
  - platform: template
    id: last_feed_time
    name: "Last Feed Time"  # 上次喂食时间
    icon: "mdi:clock-time-four-outline"
    accuracy_decimals: 0
    device_class: "TIMESTAMP"

  - platform: mpu6886  # https://esphome.io/components/sensor/mpu6886.html
    address: 0x68
    temperature:
      id: chip_temperature
      name: "MPU6886 Temperature"
      entity_category: diagnostic

switch:
  - platform: gpio
    id: backlight
    name: "Back Light" # 屏幕
    icon: "mdi:fit-to-screen"
    pin: GPIO16
    restore_mode: ALWAYS_ON
    entity_category: config
  - platform: gpio
    id: infrared_led  # 红外发射
    pin: GPIO7
  - platform: gpio
    id: ina_switch  # 电机正转
    pin: GPIO5
  # - platform: gpio
  #   id: inb_switch  # 电机反转
  #   pin: GPIO6

button:
  - platform: template
    name: "Check Feed"  # 检查物料
    on_press:
      then:
        - script.execute: check_feed
    entity_category: diagnostic

text_sensor:
  - platform: wifi_info
    ip_address:
      id: ip_address

spi:
  clk_pin: GPIO17
  mosi_pin: GPIO21

font:
  - file: "gfonts://Roboto"
    id: roboto_32
    size: 32
  - file: "gfonts://Roboto"
    id: roboto_24
    size: 24
  - file: "gfonts://Roboto"
    id: roboto_12
    size: 12

color:
  - id: red
    red: 100%
    green: 0%
    blue: 0%
  - id: yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: green
    red: 0%
    green: 100%
    blue: 0%
  - id: blue
    red: 0%
    green: 0%
    blue: 100%
  - id: gray
    red: 50%
    green: 50%
    blue: 50%
  - id: white
    red: 100%
    green: 100%
    blue: 100%

display:
  # https://github.com/esphome/feature-requests/issues/2332#issuecomment-1925091376
  - platform: ili9xxx  # https://esphome.io/components/display/ili9xxx
    model: ST7789V
    cs_pin: GPIO15
    dc_pin: GPIO33
    reset_pin: GPIO34
    rotation: 180
    invert_colors: true
    update_interval: 1s
    dimensions:
      height: 128
      width: 128
      offset_height: 1
      offset_width: 2
    lambda: |-
      it.line(0, 0, 0, it.get_height(), id(red));
      it.line(0, 0, it.get_width(), 0, id(green));
      it.line(0, it.get_height()-1, it.get_width(), it.get_height()-1, id(blue));
      it.line(it.get_width()-1, 0, it.get_width()-1, it.get_height(), id(white));

      it.print(5, 5, id(roboto_12), id(yellow), TextAlign::TOP_LEFT, "ESPHome");

      if (id(system_status).state) {
        it.print(123, 5, id(roboto_12), id(green), TextAlign::TOP_RIGHT, id(ip_address).state.c_str());
      } else {
        it.print(123, 5, id(roboto_12), id(red), TextAlign::TOP_RIGHT, "Offline");
      }

      it.strftime((128 / 2), 32, id(roboto_24), id(gray), TextAlign::CENTER, "%Y-%m-%d", id(ha_time).now());
      it.strftime((128 / 2), 55, id(roboto_32), id(gray), TextAlign::CENTER, "%H:%M:%S", id(ha_time).now());

      it.printf(5, 110, id(roboto_12), id(white), TextAlign::TOP_LEFT, "T: %.2f", id(chip_temperature).state);
