# https://esphome.io/components/sensor/sgp4x
# https://esphome.io/components/sensor/dht
# https://esphome.io/components/display/lcd_display

esphome:
  name: sgp4x

# esp32:
#   board: esp32-c3-devkitm-1
#   framework:
#     type: esp-idf
esp32:
  board: nodemcu-32s
  framework:
    type: arduino

logger:

api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

wifi:
  networks:
    - ssid: !secret wifi_ssid_302
      password: !secret wifi_password_302
    - ssid: !secret wifi_ssid_501
      password: !secret wifi_password_501
  ap:
    ssid: "fallback-ap"
    password: !secret fallback_ap_password

captive_portal:

i2c:
  - id: bus_sensor
    sda: 21
    scl: 22
    scan: true
  - id: bus_lcd
    sda: 16
    scl: 17
    scan: true

sensor:
  - platform: sgp4x
    i2c_id: bus_sensor
    voc:
      id: voc
      name: "VOC Index"
    nox:
      name: "NOx Index"
    compensation:
      humidity_source: dht22_humi
      temperature_source: dht22_temp
  - platform: dht
    pin: 18
    temperature:
      name: "DHT22 Temperature"
      id: dht22_temp
    humidity:
      name: "DHT22 Humidity"
      id: dht22_humi
    update_interval: 60s

display:
  - platform: lcd_pcf8574
    id: mydisplay
    i2c_id: bus_lcd
    dimensions: 16x2
    address: 0x27
    lambda: |-
      it.strftime("%Y.%m.%d   %a%X", id(ha_time).now());
      if (id(voc).state < 10) {
        it.printf(11, 1, "VOC:%.0f", id(voc).state);
      } else if (id(voc).state < 100) {
        it.printf(10, 1, "VOC:%.0f", id(voc).state);
      } else {
        it.printf(9, 1, "VOC:%.0f", id(voc).state);
      }

time:
  - platform: homeassistant
    id: ha_time
